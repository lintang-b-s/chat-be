basePath: /v1
definitions:
  v1.addFriendRequest:
    properties:
      friend_username:
        type: string
    type: object
  v1.addNewGroupMemberRequest:
    properties:
      members:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  v1.createGroupRequest:
    properties:
      members:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  v1.createUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 3
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  v1.deleteRefreshTokenRequest:
    type: object
  v1.deleteRefreshTokenResponse:
    type: object
  v1.getContactResponse:
    properties:
      contacts:
        items:
          $ref: '#/definitions/v1.userResponse'
        type: array
    type: object
  v1.getMessagesByFriendRespone:
    properties:
      message:
        items:
          $ref: '#/definitions/v1.privateChatMessage'
        type: array
    type: object
  v1.groupResponse:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  v1.loginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 3
        type: string
    required:
    - email
    - password
    type: object
  v1.loginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      otp:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/v1.userResponse'
    type: object
  v1.privateChatMessage:
    properties:
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      message_from:
        type: string
      message_id:
        type: integer
      message_to:
        type: string
      updated_at:
        type: string
    type: object
  v1.privateChatUsersResponse:
    properties:
      message:
        additionalProperties:
          additionalProperties:
            items:
              $ref: '#/definitions/v1.privateChatMessage'
            type: array
          type: object
        type: object
    type: object
  v1.removeGroupMember:
    properties:
      name:
        type: string
      userto_remove:
        type: string
    type: object
  v1.renewAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  v1.renewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
  v1.response:
    properties:
      error:
        example: message
        type: string
    type: object
  v1.userResponse:
    properties:
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Using a translation service as an example
  title: Go Clean Template API
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login User
      operationId: loginUser
      parameters:
      - description: Login  user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.loginUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Login User
      tags:
      - user
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register User in Db
      operationId: registerUser
      parameters:
      - description: Set up user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Register User in Db
      tags:
      - user
  /v1/auth/token:
    post:
      consumes:
      - application/json
      description: delete refresh token & fanout offline status ke semua kontak milik
        user
      operationId: deleteRefreshToken
      parameters:
      - description: Login  user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.deleteRefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.deleteRefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: delete refresh token & fanout offline status ke semua kontak milik
        user
      tags:
      - user
  /v1/contact:
    get:
      consumes:
      - application/json
      description: Get User Contact
      operationId: getContact
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getContactResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: Get  User Contact
      tags:
      - contact
  /v1/contact/add:
    post:
      consumes:
      - application/json
      description: Add Contact
      operationId: addContact
      parameters:
      - description: set up addFriendRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.addFriendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: Add Contact
      tags:
      - contact
  /v1/groups:
    post:
      consumes:
      - application/json
      description: create new group
      operationId: createNewgroup
      parameters:
      - description: set up new group
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.createGroupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.groupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: create new group
      tags:
      - group
  /v1/groups/add:
    put:
      consumes:
      - application/json
      description: add new group member
      operationId: addNewGroupMember
      parameters:
      - description: set up new group
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.addNewGroupMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.groupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: add new group member
      tags:
      - group
  /v1/groups/remove:
    put:
      consumes:
      - application/json
      description: remove group member
      operationId: removeGroupMember
      parameters:
      - description: set up removeGroupMember
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.removeGroupMember'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.groupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: remove group member
      tags:
      - group
  /v1/messages:
    get:
      consumes:
      - application/json
      description: Get user messages
      operationId: getMessages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.privateChatUsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: Get user messages
      tags:
      - messages
  /v1/messages/friend:
    get:
      consumes:
      - application/json
      description: Get user messages by friend
      operationId: getMessagesByFriend
      parameters:
      - description: friendName search by friendUsername
        in: query
        name: friendUsername
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getMessagesByFriendRespone'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - OAuth2Application: []
      summary: Get user messages by friend
      tags:
      - messages
swagger: "2.0"
